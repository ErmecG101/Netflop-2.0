{"ast":null,"code":"import _createForOfIteratorHelper from \"D:\\\\Otavio\\\\Projects\\\\Programando\\\\netflop-ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createForOfIteratorHelper.js\";\nimport _classCallCheck from \"D:\\\\Otavio\\\\Projects\\\\Programando\\\\netflop-ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"D:\\\\Otavio\\\\Projects\\\\Programando\\\\netflop-ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\n\nvar ObjectUtils = /*#__PURE__*/function () {\n  function ObjectUtils() {\n    _classCallCheck(this, ObjectUtils);\n  }\n\n  _createClass(ObjectUtils, null, [{\n    key: \"equals\",\n    value: function equals(obj1, obj2, field) {\n      if (field) return this.resolveFieldData(obj1, field) === this.resolveFieldData(obj2, field);else return this.equalsByValue(obj1, obj2);\n    }\n  }, {\n    key: \"equalsByValue\",\n    value: function equalsByValue(obj1, obj2) {\n      if (obj1 === obj2) return true;\n\n      if (obj1 && obj2 && typeof obj1 == 'object' && typeof obj2 == 'object') {\n        var arrA = Array.isArray(obj1),\n            arrB = Array.isArray(obj2),\n            i,\n            length,\n            key;\n\n        if (arrA && arrB) {\n          length = obj1.length;\n          if (length != obj2.length) return false;\n\n          for (i = length; i-- !== 0;) {\n            if (!this.equalsByValue(obj1[i], obj2[i])) return false;\n          }\n\n          return true;\n        }\n\n        if (arrA != arrB) return false;\n        var dateA = obj1 instanceof Date,\n            dateB = obj2 instanceof Date;\n        if (dateA != dateB) return false;\n        if (dateA && dateB) return obj1.getTime() == obj2.getTime();\n        var regexpA = obj1 instanceof RegExp,\n            regexpB = obj2 instanceof RegExp;\n        if (regexpA != regexpB) return false;\n        if (regexpA && regexpB) return obj1.toString() == obj2.toString();\n        var keys = Object.keys(obj1);\n        length = keys.length;\n        if (length !== Object.keys(obj2).length) return false;\n\n        for (i = length; i-- !== 0;) {\n          if (!Object.prototype.hasOwnProperty.call(obj2, keys[i])) return false;\n        }\n\n        for (i = length; i-- !== 0;) {\n          key = keys[i];\n          if (!this.equalsByValue(obj1[key], obj2[key])) return false;\n        }\n\n        return true;\n      }\n\n      return obj1 !== obj1 && obj2 !== obj2;\n    }\n  }, {\n    key: \"resolveFieldData\",\n    value: function resolveFieldData(data, field) {\n      if (data && field) {\n        if (this.isFunction(field)) {\n          return field(data);\n        } else if (field.indexOf('.') == -1) {\n          return data[field];\n        } else {\n          var fields = field.split('.');\n          var value = data;\n\n          for (var i = 0, len = fields.length; i < len; ++i) {\n            if (value == null) {\n              return null;\n            }\n\n            value = value[fields[i]];\n          }\n\n          return value;\n        }\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"isFunction\",\n    value: function isFunction(obj) {\n      return !!(obj && obj.constructor && obj.call && obj.apply);\n    }\n  }, {\n    key: \"reorderArray\",\n    value: function reorderArray(value, from, to) {\n      var target;\n\n      if (value && from !== to) {\n        if (to >= value.length) {\n          to %= value.length;\n          from %= value.length;\n        }\n\n        value.splice(to, 0, value.splice(from, 1)[0]);\n      }\n    }\n  }, {\n    key: \"insertIntoOrderedArray\",\n    value: function insertIntoOrderedArray(item, index, arr, sourceArr) {\n      if (arr.length > 0) {\n        var injected = false;\n\n        for (var i = 0; i < arr.length; i++) {\n          var currentItemIndex = this.findIndexInList(arr[i], sourceArr);\n\n          if (currentItemIndex > index) {\n            arr.splice(i, 0, item);\n            injected = true;\n            break;\n          }\n        }\n\n        if (!injected) {\n          arr.push(item);\n        }\n      } else {\n        arr.push(item);\n      }\n    }\n  }, {\n    key: \"findIndexInList\",\n    value: function findIndexInList(item, list) {\n      var index = -1;\n\n      if (list) {\n        for (var i = 0; i < list.length; i++) {\n          if (list[i] == item) {\n            index = i;\n            break;\n          }\n        }\n      }\n\n      return index;\n    }\n  }, {\n    key: \"contains\",\n    value: function contains(value, list) {\n      if (value != null && list && list.length) {\n        var _iterator = _createForOfIteratorHelper(list),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var val = _step.value;\n            if (this.equals(value, val)) return true;\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"removeAccents\",\n    value: function removeAccents(str) {\n      if (str && str.search(/[\\xC0-\\xFF]/g) > -1) {\n        str = str.replace(/[\\xC0-\\xC5]/g, \"A\").replace(/[\\xC6]/g, \"AE\").replace(/[\\xC7]/g, \"C\").replace(/[\\xC8-\\xCB]/g, \"E\").replace(/[\\xCC-\\xCF]/g, \"I\").replace(/[\\xD0]/g, \"D\").replace(/[\\xD1]/g, \"N\").replace(/[\\xD2-\\xD6\\xD8]/g, \"O\").replace(/[\\xD9-\\xDC]/g, \"U\").replace(/[\\xDD]/g, \"Y\").replace(/[\\xDE]/g, \"P\").replace(/[\\xE0-\\xE5]/g, \"a\").replace(/[\\xE6]/g, \"ae\").replace(/[\\xE7]/g, \"c\").replace(/[\\xE8-\\xEB]/g, \"e\").replace(/[\\xEC-\\xEF]/g, \"i\").replace(/[\\xF1]/g, \"n\").replace(/[\\xF2-\\xF6\\xF8]/g, \"o\").replace(/[\\xF9-\\xFC]/g, \"u\").replace(/[\\xFE]/g, \"p\").replace(/[\\xFD\\xFF]/g, \"y\");\n      }\n\n      return str;\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty(value) {\n      return value === null || value === undefined || value === '' || Array.isArray(value) && value.length === 0 || !(value instanceof Date) && typeof value === 'object' && Object.keys(value).length === 0;\n    }\n  }, {\n    key: \"isNotEmpty\",\n    value: function isNotEmpty(value) {\n      return !this.isEmpty(value);\n    }\n  }]);\n\n  return ObjectUtils;\n}();\n\nvar lastId = 0;\n\nfunction UniqueComponentId() {\n  var prefix = 'pr_id_';\n  lastId++;\n  return \"\".concat(prefix).concat(lastId);\n}\n\nfunction ZIndexUtils() {\n  var zIndexes = [];\n\n  var generateZIndex = function generateZIndex(key, baseZIndex) {\n    var lastZIndex = zIndexes.length > 0 ? zIndexes[zIndexes.length - 1] : {\n      key: key,\n      value: baseZIndex\n    };\n    var newZIndex = lastZIndex.value + (lastZIndex.key === key ? 0 : baseZIndex) + 1;\n    zIndexes.push({\n      key: key,\n      value: newZIndex\n    });\n    return newZIndex;\n  };\n\n  var revertZIndex = function revertZIndex(zIndex) {\n    zIndexes = zIndexes.filter(function (obj) {\n      return obj.value !== zIndex;\n    });\n  };\n\n  var getCurrentZIndex = function getCurrentZIndex() {\n    return zIndexes.length > 0 ? zIndexes[zIndexes.length - 1].value : 0;\n  };\n\n  var getZIndex = function getZIndex(el) {\n    return el ? parseInt(el.style.zIndex, 10) || 0 : 0;\n  };\n\n  return {\n    get: getZIndex,\n    set: function set(key, el, baseZIndex) {\n      if (el) {\n        el.style.zIndex = String(generateZIndex(key, baseZIndex));\n      }\n    },\n    clear: function clear(el) {\n      if (el) {\n        revertZIndex(getZIndex(el));\n        el.style.zIndex = '';\n      }\n    },\n    getCurrent: function getCurrent() {\n      return getCurrentZIndex();\n    }\n  };\n}\n\nvar zindexutils = ZIndexUtils();\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ObjectUtils, UniqueComponentId, zindexutils as ZIndexUtils }; //# sourceMappingURL=primeng-utils.mjs.map","map":null,"metadata":{},"sourceType":"module"}